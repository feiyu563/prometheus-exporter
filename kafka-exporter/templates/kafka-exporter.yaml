apiVersion: apps/v1beta2
kind: Deployment
metadata:
  labels:
    kafkaurl: {{ .Values.env.url }}
    app: {{ template "kafka-exporter.name" . }}
    chart: {{ template "kafka-exporter.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
  name: {{ template "kafka-exporter.fullname" . }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ template "kafka-exporter.name" . }}
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        kafkaurl: {{ .Values.env.url }}
        app: {{ template "kafka-exporter.name" . }}
        release: {{ .Release.Name }}
    spec:
      hostAliases:
      - hostnames:
        - kafka01
        ip: 10.201.2.111
      - hostnames:
        - kafka02
        ip: 10.201.2.112
      containers:
      - image: danielqsj/kafka-exporter
        name: kafka-exporter
        args: ["--kafka.server={{ .Values.env.kafka_addr }}"]
        env:
        - name: TZ
          value: "Asia/Shanghai"
        ports:
        - containerPort: 9308
          name: http
        resources:
          limits:
            cpu: 200m
            memory: 200Mi
          requests:
            cpu: 100m
            memory: 100Mi
---
apiVersion: v1
kind: Service
metadata:
  labels:
    kafkaurl: {{ .Values.env.url }}
    app: {{ template "kafka-exporter.name" . }}
    chart: {{ template "kafka-exporter.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
  name: {{ template "kafka-exporter.fullname" . }}
  annotations:
    prometheus.io/scrape: 'true'
    #prometheus.io/path: '/metrics'
    #prometheus.io/port: '8080'
spec:
  ports:
  - name: http
    port: 9308
    targetPort: http
  selector:
    app: {{ template "kafka-exporter.name" . }}
    release: {{ .Release.Name }}
